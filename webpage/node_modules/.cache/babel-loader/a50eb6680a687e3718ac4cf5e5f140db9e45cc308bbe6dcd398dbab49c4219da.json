{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport _imports_0 from '@/assets/xx_Images/xx_Images/Buttons/button speichern.png';\nconst _hoisted_1 = {\n  class: \"page-wrapper-newPassword newPassword\"\n};\nconst _hoisted_2 = {\n  class: \"content-box-newPassword\"\n};\nconst _hoisted_3 = {\n  class: \"input-group\"\n};\nconst _hoisted_4 = {\n  class: \"input-group\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Überschrift \"), _cache[6] || (_cache[6] = _createElementVNode(\"div\", {\n    class: \"new-password\"\n  }, [_createElementVNode(\"h1\", null, \"Neues Passwort erstellen\")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" Eingabeformular \"), _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.handlePasswordSave && $options.handlePasswordSave(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_3, [_cache[3] || (_cache[3] = _createElementVNode(\"label\", {\n    for: \"password\",\n    id: \"passwordLabel\"\n  }, \"Passwort (mind. 8 Zeichen)\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.password = $event),\n    required: \"\",\n    minlength: \"8\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])]), _createElementVNode(\"div\", _hoisted_4, [_cache[4] || (_cache[4] = _createElementVNode(\"label\", {\n    for: \"confirmPassword\",\n    id: \"confirmPasswordLabel\"\n  }, \"Passwort wiederholen\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"confirmPassword\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.confirmPassword = $event),\n    required: \"\",\n    minlength: \"8\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.confirmPassword]])]), _createCommentVNode(\" Speicher-Button \"), _cache[5] || (_cache[5] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"submit-button-newPassword\"\n  }, [_createElementVNode(\"img\", {\n    src: _imports_0,\n    alt: \"Speichern\"\n  })], -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)])]);\n}","map":{"version":3,"names":["_imports_0","class","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","onSubmit","_cache","_withModifiers","args","$options","handlePasswordSave","_hoisted_3","for","id","type","$event","$data","password","required","minlength","_hoisted_4","confirmPassword","src","alt"],"sources":["C:\\Alexander\\HTL Rennweg\\linguExplorer\\webpage\\src\\pages\\NewPassword.vue"],"sourcesContent":["<template>\r\n    <div class=\"page-wrapper-newPassword newPassword\">\r\n        <!-- Überschrift -->\r\n        <div class=\"new-password\">\r\n                <h1>Neues Passwort erstellen</h1>\r\n            </div>\r\n        <div class=\"content-box-newPassword\">\r\n\r\n            <!-- Eingabeformular -->\r\n            <form @submit.prevent=\"handlePasswordSave\">\r\n                <div class=\"input-group\">\r\n                    <label for=\"password\" id=\"passwordLabel\">Passwort (mind. 8 Zeichen)</label>\r\n                    <input type=\"password\" id=\"password\" v-model=\"password\" required minlength=\"8\" />\r\n                </div>\r\n                \r\n                <div class=\"input-group\">\r\n                    <label for=\"confirmPassword\" id=\"confirmPasswordLabel\">Passwort wiederholen</label>\r\n                    <input type=\"password\" id=\"confirmPassword\" v-model=\"confirmPassword\" required minlength=\"8\" />\r\n                </div>\r\n\r\n                <!-- Speicher-Button -->\r\n                <button type=\"submit\" class=\"submit-button-newPassword\">\r\n                    <img src=\"@/assets/xx_Images/xx_Images/Buttons/button speichern.png\" alt=\"Speichern\" />\r\n                </button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport '../styles/NewPassword.css';\r\nexport default {\r\n    name: 'NewPassword',\r\n    data() {\r\n        return {\r\n            password: '',\r\n            confirmPassword: ''\r\n        };\r\n    },\r\n    methods: {\r\n        handlePasswordSave() {\r\n            if (this.password === this.confirmPassword) {\r\n                console.log('Neues Passwort speichern:', this.password);\r\n            } else {\r\n                console.error('Die Passwörter stimmen nicht überein.');\r\n            }\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n"],"mappings":";OAsByBA,UAA+D;;EArB/EC,KAAK,EAAC;AAAsC;;EAKxCA,KAAK,EAAC;AAAyB;;EAIvBA,KAAK,EAAC;AAAa;;EAKnBA,KAAK,EAAC;AAAa;;uBAdpCC,mBAAA,CAyBM,OAzBNC,UAyBM,GAxBFC,mBAAA,iBAAoB,E,0BACpBC,mBAAA,CAEU;IAFLJ,KAAK,EAAC;EAAc,IACjBI,mBAAA,CAAiC,YAA7B,0BAAwB,E,sBAEpCA,mBAAA,CAmBM,OAnBNC,UAmBM,GAjBFF,mBAAA,qBAAwB,EACxBC,mBAAA,CAeO;IAfAE,QAAM,EAAAC,MAAA,QAAAA,MAAA,MATzBC,cAAA,KAAAC,IAAA,KASmCC,QAAA,CAAAC,kBAAA,IAAAD,QAAA,CAAAC,kBAAA,IAAAF,IAAA,CAAkB;MACrCL,mBAAA,CAGM,OAHNQ,UAGM,G,0BAFFR,mBAAA,CAA2E;IAApES,GAAG,EAAC,UAAU;IAACC,EAAE,EAAC;KAAgB,4BAA0B,sB,gBACnEV,mBAAA,CAAiF;IAA1EW,IAAI,EAAC,UAAU;IAACD,EAAE,EAAC,UAAU;IAZxD,uBAAAP,MAAA,QAAAA,MAAA,MAAAS,MAAA,IAYkEC,KAAA,CAAAC,QAAQ,GAAAF,MAAA;IAAEG,QAAQ,EAAR,EAAQ;IAACC,SAAS,EAAC;iDAA7BH,KAAA,CAAAC,QAAQ,E,KAG1Dd,mBAAA,CAGM,OAHNiB,UAGM,G,0BAFFjB,mBAAA,CAAmF;IAA5ES,GAAG,EAAC,iBAAiB;IAACC,EAAE,EAAC;KAAuB,sBAAoB,sB,gBAC3EV,mBAAA,CAA+F;IAAxFW,IAAI,EAAC,UAAU;IAACD,EAAE,EAAC,iBAAiB;IAjB/D,uBAAAP,MAAA,QAAAA,MAAA,MAAAS,MAAA,IAiByEC,KAAA,CAAAK,eAAe,GAAAN,MAAA;IAAEG,QAAQ,EAAR,EAAQ;IAACC,SAAS,EAAC;iDAApCH,KAAA,CAAAK,eAAe,E,KAGxEnB,mBAAA,qBAAwB,E,0BACxBC,mBAAA,CAES;IAFDW,IAAI,EAAC,QAAQ;IAACf,KAAK,EAAC;MACxBI,mBAAA,CAAuF;IAAlFmB,GAA+D,EAA/DxB,UAA+D;IAACyB,GAAG,EAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}