services:
  reverse-proxy:
    image: traefik:v3.1
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--log.level=DEBUG"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=team@linguexplorer.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
      
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
  frontend:
    build:
      context: ./webpage
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`linguexplorer.com`) || Host(`www.linguexplorer.com`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"

    deploy:
      mode: replicated
      replicas: 3


    restart: always

  db:
    image: mysql:latest
    container_name: lingu-user-mysql
    restart: always
    volumes:
      - mdata:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysql", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD}", "-e", "SELECT 1"]
      timeout: 20s
      retries: 5

  backend:
    build:
      context: .
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`da.linguexplorer.com`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=myresolver"

    container_name: lingu-backend-container
    command: sh -c "python manage.py migrate --noinput && gunicorn --bind 0.0.0.0:8000 lingu.wsgi"
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - ./backend/lingu/:/app
    env_file:
      - .env
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      retries: 3
      interval: 10s
      timeout: 10s


volumes:
  letsencrypt:
  mdata: